A)
CLI
rails new <placeholder>                                                         //cli to make a new app
gem 'sqlite3', '~> 1.3.13'                                                      //roll back the sqlite3 version in gemfile
gem 'bootstrap-sass', '~> 3.4.1'                                                // install bootstrap and sass
gem 'pg'                                                                        //later change to postgress and repeat bundle
bundle install                                                                  //cli to bundle install
bundle update                                                                   //cli to bundle update
bundle install --without production                                            //to install without the production -- needed for pg
rails s -b $IP -p $PORT                                                         //cli to run the server
rails server                                                                    //cli to run the server
rails s                                                                         //cli to run the server
killall tmux                                                                    //cli to reset the server - in case of bugs
rails routes                                                                    //cli for detecting routes
open in new tab                                                                 //open the new app in an external browser
https://github.com/BadProfessor/BlockFuzz                                       //github link
https://d51071f498a3403c8ed4ef4ac6b36b3d.vfs.cloud9.eu-west-1.amazonaws.com/    //aws page link
rails generate scaffold <Model> column:type                                     //scaffold model generator
rails db:migrate                                                                //generate a table
rails routes | grep <model name>                                                //pull out all the specific links
rails generate migration create_articles                                        //generate a migration
db:rollback                                                                     //drop the database file
rails generate scaffold                                                         //generate scaffold
rails db:drop                                                                   //drops the database
rails test                                                                      //run rails test
/rails/db/                                                                      //append to the host URL




GIT
git config --global user.name "user"                            //cli to associate a username with git
git config --global user.email "email"                          //cli to associate a email with git
git config --list                                               //check settings
git init                                                        //initialize git
git add -A                                                      //start adding
git status                                                      //check the status
git commit -m "Message"                                         //commit changes with a message
git checkout -f                                                 //uncommit last changes
ls -al ~/.ssh                                                   //check for any ssh keys
ssh-keygen -t rsa                                               //generate rsa key pair - press three times enter
cat ~/.ssh/id_rsa.pub                                           //press to check again the key
git remote add origin git@github.com:BadProfessor/BlockFuzz.git //push the origin to GitHub
git remote -v                                                   //list the origin
git push -u origin master                                       //push to the master branch
git checkout -b <branch name>                                   //create new branch
git checkout <branch name>                                      //switch to a branch
git merge   <branch name>                                       //merge the branches
git branch -d <branch name>                                     //delete branch


Heroku
heroku login                                                                    //login to heroku
heroku create                                                                   //creates the application in heroku
heroku keys:add                                                                 //add the ssh keys to heroku
git remote add heroku https://git.heroku.com/blockfuzz.git                      //add heroku repository
git push heroku master                                                          //push the changes to heroku master branch
heroku run rails db:migrate                                                     //generate a table in heroku
heroku rename <placeholder>                                                     //rename your app
https://blockfuzz.herokuapp.com/                                                //heroku app link
https://git.heroku.com/blockfuzz.git                                            //heroku git link
sudo snap install --classic heroku                                              //install heroku
heroku run rails console                                                        //run rails console in heroku



Rails console
rails console                 //opens the rails console for changing
Model.all                     //show the columns from a table
variable = Model.new          //create the new column
variable.column = <value>     //insert the value
variable.save                 //insert into tables
exit                          //exit the rails console
variable = Model.find(#)      //select in the variable which article we are targeting
variable.destroy              //destroys the table
reload!                       //reload the console
variable.errors.any?          //check if any errors
variable.errors.full_messages //check the full error messages
user.toggle!(:admin)          //toggle a user variable

# JarBarReviews Notes v1.1

# CLI
rails new JarBarReviews -T --api
bundle
gem install sqlite3
gem list sqlite3
gem 'sqlite3', '~> 1.3.13'
bundle install
bundle install --without production
rails g rspec:install
git init
git add -A
git commit -m "first commit"
git remote add origin git@github.com:BadProfessor/JarBarReviews.git
git push -u origin master
rails g model article title content:text slug
rails db:migrate
rake routes
rake routes | grep articles
rails g serializer article title content slug
rails db:seed
GITHUB_LOGIN='jjarmek' GITHUB_PASSWORD='secret' rails c
rails g model user login name url avatar_url provider
rails g model access_token token user:references
rails g controller access_tokens
rails g migration add_user_to_articles user:references
rails g scaffold comment content:text article:references user:reference
rake routes | grep comments
sudo snap install heroku --classic
heroku login
heroku git:remote -a jarbarreviews
git add .
git commit -am "make it better"
git push heroku master
https://jarbarreviews.herokuapp.com/
heroku run rails db:migrate
heroku run rails db:seed
rails g migration add_encrypted_password_to_users encrypted_password


# Files opened - to change
*   /JarBarReviews/.gitignore
*   /JarBarReviews/README.md
*   /JarBarReviews/JarBarNotes.txt
/JarBarReviews/Gemfile
/JarBarReviews/config/application.rb
/JarBarReviews/app/models/article.rb
/JarBarReviews/spec/models/article_spec.rb
/JarBarReviews/spec/rails_helper.rb
/JarBarReviews/spec/routing/articles_spec.rb
/JarBarReviews/config/routes.rb
/JarBarReviews/app/controllers/articles_controller.rb
/JarBarReviews/spec/controllers/articles_controller_spec.rb
/JarBarReviews/spec/factories/articles.rb
/JarBarReviews/app/serializers/article_serializer.rb
/JarBarReviews/config/initializers/active_model_serializers.rb
/JarBarReviews/db/seeds.rb
/JarBarReviews/db/migrate/20180503212840_create_users.rb
/JarBarReviews/spec/models/user_spec.rb
/JarBarReviews/spec/factories/users.rb
/JarBarReviews/app/models/user.rb
/JarBarReviews/app/lib/user_authenticator.rb
/JarBarReviews/spec/lib/user_authenticator_spec.rb
/JarBarReviews/app/models/access_token.rb
/JarBarReviews/db/migrate/20180506105306_create_access_tokens.rb
/JarBarReviews/spec/models/access_token_spec.rb
/JarBarReviews/app/controllers/access_tokens_controller.rb
/JarBarReviews/spec/controllers/access_tokens_controller_spec.rb
/JarBarReviews/spec/support/shared/json_errors.rb
/JarBarReviews/app/serializers/error_serializer.rb
/JarBarReviews/db/migrate/20180518211629_add_user_to_articles.rb
/JarBarReviews/db/migrate/20180519145812_create_comments.rb
/JarBarReviews/spec/controllers/comments_controller_spec.rb
/JarBarReviews/app/controllers/comments_controller.rb
/JarBarReviews/app/models/comment.rb
/JarBarReviews/spec/factories/comments.rb
/JarBarReviews/app/serializers/comment_serializer.rb
/JarBarReviews/app/serializers/user_serializer.rb
/JarBarReviews/app/lib/user_authenticator/oauth.rb
/JarBarReviews/app/lib/user_authenticator/standard.rb
/JarBarReviews/spec/lib/user_authenticator/oauth_spec.rb
/JarBarReviews/spec/lib/user_authenticator/standard_spec.rb
/JarBarReviews/spec/routing/registrations_spec.rb
/JarBarReviews/app/controllers/registrations_controller.rb
/JarBarReviews/spec/controllers/registrations_controller_spec.rb

# Tests
rspec
rspec spec/models/article_spec.rb
rspec spec/routing/articles_spec.rb
rspec spec/controllers/articles_controller_spec.rb
rspec spec/models/user_spec.rb
rspec spec/lib/user_authenticator_spec.rb
rspec spec/models/access_token_spec.rb
rspec spec/controllers/access_tokens_controller_spec.rb
rspec spec/controllers/comments_controller_spec.rb
rspec spec/lib/user_authenticator/oauth_spec.rb
rspec spec/lib/user_authenticator/standard_spec.rb
rspec spec/lib
rspec spec/routing/registrations_spec.rb
rspec spec/controllers/registrations_controller_spec.rb

# Extra gems
gem 'rspec-rails'
gem 'factory_bot_rails'
gem 'active_model_serializers'
gem 'kaminari'
gem "octokit", "~> 4.0"
gem 'bcrypt'

# rails console
rails c
Article.count
Article.last.destroy
ENV['GITHUB_LOGIN']
client = Octokit::Client.new(login: ENV['GITHUB_LOGIN'], password: ENV['GITHUB_PASSWORD'])
client = Octokit::Client.new(client_id: '3946335e7e008dc980af', client_secret: 'f4336711c9c25f758146cb22de9d70c6fefa35b9')
client.user
User.create
client.user.class.name
client.user.to_h
client.user.to_h(:login, :avatar_url, :url, :name)
exit

/DMAF/app/assets/stylesheets/application.css.scss

# whiskey_flickr Notes

rails new whiskey_flickr
gem 'sqlite3', '~> 1.3.13'
rails g controller Search index
/whiskey_flickr/config/routes.rb
rails s
/whiskey_flickr/app/views/search/index.html.erb
sudo gem install flickr-fu
/whiskey_flickr/config/flickr.yml
/whiskey_flickr/app/helpers/search_helper.rb
/whiskey_flickr/app/controllers/search_controller.rb
/whiskey_flickr/app/views/search/photos.html.erb
/whiskey_flickr/app/views/search/index.js.erb
gem 'flickr_fu', '~> 0.3.4'

# part 2
gem 'aws-sdk', '~> 2'
bundle install
touch config/initializers/aws.rb
gem 'shoryuken'
/whiskey_flickr/config/initializers/aws.rb
mkdir app/workers
touch app/workers/flickr_worker.rb
/whiskey_flickr/app/workers/flickr_worker.rb
touch app/workers/flickr_middleware.rb
/whiskey_flickr/app/workers/flickr_middleware.rb
touch config/shoryuken.yml
/whiskey_flickr/config/shoryuken.yml
bundle exec shoryuken -R -C config/shoryuken.yml
rails g model Photo user_id:string photos:string
/whiskey_flickr/app/models/photo.rb
/whiskey_flickr/db/migrate/20200815234307_create_photos.rb
rake db:migrate
git init
git commit -m "first commit"

rails s
bundle exec shoryuken -R -C config/shoryuken.yml


Delete IAM login
Delete Flickr tokens